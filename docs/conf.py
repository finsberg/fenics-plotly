#!/usr/bin/env python
#
# fenics_plotly documentation build configuration file, created by
# sphinx-quickstart on Fri Jun  9 13:47:02 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another
# directory, add these directories to sys.path here. If the directory is
# relative to the documentation root, use os.path.abspath to make it
# absolute, like shown here.
#
import os
import shutil
import sys
from pathlib import Path
from unittest import mock

HERE = Path(__file__).parent

sys.modules["fenics"] = mock.Mock()
sys.modules["dolfin"] = mock.Mock()

sys.path.insert(0, HERE.joinpath(".."))
import fenics_plotly  # noqa: E402

# -- General configuration ---------------------------------------------


# -------------------- Import Notebooks --------------------

for file in os.listdir("."):
    if ".ipynb" in file:
        os.remove(file)

demodir = HERE.joinpath("..").joinpath("demo")
to_import = ["unit_cube.ipynb", "unit_square.ipynb"]

for notebook in demodir.iterdir():
    if notebook.name in to_import:
        src = notebook
        dst = notebook.name
        shutil.copy2(src, dst)

with open("demo.rst", "w+") as f:
    f.write(".. _demo:\n\n")
    f.write("Demo\n")
    f.write("====\n\n")
    f.write(".. toctree::\n")
    f.write("   :titlesonly:\n")
    f.write("   :maxdepth: 1\n\n")
    for i in to_import:
        f.write("   " + i.replace(".ipynb", "") + "\n")


# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.viewcode",
    "sphinx.ext.intersphinx",
    "sphinx.ext.mathjax",
    "sphinx.ext.githubpages",
    "sphinx.ext.napoleon",
    "nbsphinx",
]

# Enable plotly figure in the docs
nbsphinx_prolog = r"""
.. raw:: html

    <script src='http://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js'></script>
    <script>require=requirejs;</script>


"""
nbsphinx_timeout = -1


autosummary_generate = True
intersphinx_mapping = {
    "python": ("https://docs.python.org/3", None),
    "dolfin": ("https://fenicsproject.org/olddocs/dolfin/latest/python", None),
    "ufl": ("https://fenics.readthedocs.io/projects/ufl/en/latest/", None),
}
inheritance_node_attrs = dict(
    shape="ellipse", fontsize=12, color="orange", style="filled"
)


# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "FEniCS-Plotly"
copyright = "2020, Henrik Finsberg"
author = "Henrik Finsberg"

# The version info for the project you're documenting, acts as replacement
# for |version| and |release|, also used in various other places throughout
# the built documents.
#
# The short X.Y version.
version = fenics_plotly.__version__
# The full version, including alpha/beta/rc tags.
release = fenics_plotly.__version__

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output -------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"

# Theme options are theme-specific and customize the look and feel of a
# theme further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]


# -- Options for HTMLHelp output ---------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "fenics_plotlydoc"


# -- Options for LaTeX output ------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass
# [howto, manual, or own class]).
latex_documents = [
    (
        master_doc,
        "fenics_plotly.tex",
        "FEniCS-Plotly Documentation",
        "Henrik Finsberg",
        "manual",
    ),
]


# -- Options for manual page output ------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "fenics_plotly", "FEniCS-Plotly Documentation", [author], 1)]


# -- Options for Texinfo output ----------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "fenics_plotly",
        "FEniCS-Plotly Documentation",
        author,
        "fenics_plotly",
        "One line description of project.",
        "Miscellaneous",
    ),
]
